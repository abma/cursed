function gadget:GetInfo()
	return {
		name = "Buttons_EUF.lua",
		desc = "Alters UI",
		author = "aZaremoth",
		date = "December 10th, 2008",
		license = "public domain",
		layer = 1,
		enabled = true,
		}
end

---------------------------------------------------------------------
local AllEUF = {
	[UnitDefNames.euf_aatower.id] = "euf_aatower",
	[UnitDefNames.euf_aatower_survival.id] = "euf_aatower_survival",
	[UnitDefNames.euf_aatank.id] = "euf_aatank",
	[UnitDefNames.euf_angel.id] = "euf_angel",
	[UnitDefNames.euf_airport.id] = "euf_airport",	
	[UnitDefNames.euf_barracks.id] = "euf_barracks",
	[UnitDefNames.euf_bazooka.id] = "euf_bazooka",
	[UnitDefNames.euf_bomber.id] = "euf_bomber",	
	[UnitDefNames.euf_bunker.id] = "euf_bunker",
	[UnitDefNames.euf_bunker_ai.id] = "euf_bunker_ai",	
	[UnitDefNames.euf_church.id] = "euf_church",	
	[UnitDefNames.euf_constructor.id] = "euf_constructor",
	[UnitDefNames.euf_constructor_lvl2.id] = "euf_constructor_lvl2",
	[UnitDefNames.euf_destroyer.id] = "euf_destroyer",	
	[UnitDefNames.euf_factory.id] = "euf_factory",
	[UnitDefNames.goldtree.id] = "goldtree",	
	[UnitDefNames.euf_interceptor.id] = "euf_interceptor",
	[UnitDefNames.euf_lasertower.id] = "euf_lasertower",	
	[UnitDefNames.euf_lasertower_survival.id] = "euf_lasertower_survival",	
	[UnitDefNames.euf_marine.id] = "euf_marine",
	[UnitDefNames.euf_metalextractor_lvl1.id] = "euf_metalextractor_lvl1",
	[UnitDefNames.euf_metalextractor_lvl2.id] = "euf_metalextractor_lvl2",
	[UnitDefNames.euf_mlrs.id] = "euf_mlrs",
	[UnitDefNames.euf_paladin.id] = "euf_paladin",
	[UnitDefNames.euf_plasmatower.id] = "euf_plasmatower",
	[UnitDefNames.euf_plasmatower_survival.id] = "euf_plasmatower_survival",	
	[UnitDefNames.euf_powerplant.id] = "euf_powerplant",
	[UnitDefNames.euf_priest.id] = "euf_priest",
	[UnitDefNames.euf_pyro.id] = "euf_pyro",
	[UnitDefNames.euf_radar_lvl1.id] = "euf_radar_lvl1",
	[UnitDefNames.euf_radar_lvl2.id] = "euf_radar_lvl2",
	[UnitDefNames.euf_raider.id] = "euf_raider",
	[UnitDefNames.euf_sanctum.id] = "euf_sanctum",
	[UnitDefNames.euf_sarge.id] = "euf_sarge",	
	[UnitDefNames.euf_scorpion.id] = "euf_scorpion",
	[UnitDefNames.euf_scorpion_burrowed.id] = "euf_scorpion_burrowed",		
	[UnitDefNames.euf_scout.id] = "euf_scout",	
	[UnitDefNames.euf_sensorbot.id] = "euf_sensorbot",		
	[UnitDefNames.euf_sniper.id] = "euf_sniper",	
	[UnitDefNames.euf_solar.id] = "euf_solar",
	[UnitDefNames.euf_start.id] = "euf_start",	
	[UnitDefNames.euf_tank.id] = "euf_tank",
	[UnitDefNames.euf_techcenter.id] = "euf_techcenter",
	[UnitDefNames.euf_techcenter_shield.id] = "euf_techcenter_shield",
	[UnitDefNames.euf_transport.id] = "euf_transport",
	[UnitDefNames.euf_walker.id] = "euf_walker",
	[UnitDefNames.euf_werewolf.id] = "euf_werewolf",
	[UnitDefNames.euf_wolf.id] = "euf_wolf",
	}

local ImmobileNoStandartButtons = {
	[UnitDefNames.euf_metalextractor_lvl1.id] = "euf_metalextractor_lvl1",
	[UnitDefNames.euf_metalextractor_lvl2.id] = "euf_metalextractor_lvl2",
	[UnitDefNames.euf_powerplant.id] = "euf_powerplant",
	[UnitDefNames.euf_radar_lvl1.id] = "euf_radar_lvl1",
	[UnitDefNames.euf_radar_lvl2.id] = "euf_radar_lvl2",	
	[UnitDefNames.euf_sanctum.id] = "euf_sanctum",	
	[UnitDefNames.euf_solar.id] = "euf_solar",
	[UnitDefNames.euf_start.id] = "euf_start",
	[UnitDefNames.euf_techcenter.id] = "euf_techcenter",	
	[UnitDefNames.euf_techcenter_shield.id] = "euf_techcenter_shield",
	}

local CanNotLand = {
	[UnitDefNames.euf_scout.id] = "euf_scout",	
	}
	
	
---------------------------------------------------------------------
if (gadgetHandler:IsSyncedCode()) then
---------------------------------------------------------------------
function gadget:UnitCreated(u, ud, team)
	if AllEUF [Spring.GetUnitDefID(u)] then
		local cmdID
		cmdID = Spring.FindUnitCmdDesc(u, CMD.LOAD_UNITS)
		if cmdID ~= nil then
		Spring.EditUnitCmdDesc(u, cmdID, {
			name="",
			onlyTexture=true,
			texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_load.png",
			})
		end
		cmdID = Spring.FindUnitCmdDesc(u, CMD.UNLOAD_UNITS)
		if cmdID ~= nil then
		Spring.EditUnitCmdDesc(u, cmdID, {
			name="",
			onlyTexture=true,
			texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_unload.png",
			})
		end		
		cmdID = Spring.FindUnitCmdDesc(u, CMD.ATTACK)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
				onlyTexture=true,
				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_attack.png",
			})
		end	
		cmdID = Spring.FindUnitCmdDesc(u, CMD.AREA_ATTACK)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
				onlyTexture=true,  		
				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_areaattack.png",
			})
		end
		cmdID = Spring.FindUnitCmdDesc(u, CMD.RESURRECT)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
     				onlyTexture=true,			
 				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_empty.png",
			})
		end	
		cmdID = Spring.FindUnitCmdDesc(u, CMD.AUTOREPAIRLEVEL)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
 				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_empty.png",
			})
		end
		cmdID = Spring.FindUnitCmdDesc(u, CMD.IDLEMODE)
		if cmdID ~= nil then
			Spring.RemoveUnitCmdDesc(u, cmdID)
		end
		cmdID = Spring.FindUnitCmdDesc(u, CMD.CAPTURE)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
     				onlyTexture=true,			 
				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_empty.png",
			})
		end	
		cmdID = Spring.FindUnitCmdDesc(u, CMD.CLOAK)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
 				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_cloak.png",
			})
		end
		cmdID = Spring.FindUnitCmdDesc(u, CMD.STOCKPILE)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
 				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_empty.png",
			})
		end
		cmdID = Spring.FindUnitCmdDesc(u, CMD.GUARD)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
				onlyTexture=true,   			
				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_guard.png",
			})
		end	
		cmdID = Spring.FindUnitCmdDesc(u, CMD.STOP)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
     				onlyTexture=true,				
				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_stop.png",
			})
		end
		cmdID = Spring.FindUnitCmdDesc(u, CMD.WAIT)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
     				onlyTexture=true,		
				name = "",			
				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_wait.png",
			})
		end
		cmdID = Spring.FindUnitCmdDesc(u, CMD.PATROL)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
     				onlyTexture=true,		
				name = "",			
				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_patrol.png",
			})
		end
		cmdID = Spring.FindUnitCmdDesc(u, CMD.MOVE)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
     				onlyTexture=true,		
				name = "",			
				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_move.png",
			})
		end
		cmdID = Spring.FindUnitCmdDesc(u, CMD.FIGHT)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
     				onlyTexture=true,	
				name = "",			
				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_fight.png",
			})
		end
		cmdID = Spring.FindUnitCmdDesc(u, CMD.REPAIR)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
     				onlyTexture=true,		
				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_repair.png",
			})
		end
		cmdID = Spring.FindUnitCmdDesc(u, CMD.RESTORE)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
     				onlyTexture=true,	
				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_restore.png",
			})
		end
		cmdID = Spring.FindUnitCmdDesc(u, CMD.RECLAIM)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
     				onlyTexture=true,	
				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_reclaim.png",
			})
		end
		cmdID = Spring.FindUnitCmdDesc(u, CMD.MOVE_STATE)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_empty.png",
			})
		end
		cmdID = Spring.FindUnitCmdDesc(u, CMD.FIRE_STATE)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_empty.png",
			})
		end
		cmdID = Spring.FindUnitCmdDesc(u, CMD.ONOFF)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_empty.png",
			})
		end
		cmdID = Spring.FindUnitCmdDesc(u, CMD.TRAJECTORY)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
				onlyTexture=true,
				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_empty.png",
			})
		end
		cmdID = Spring.FindUnitCmdDesc(u, CMD.AISELECT)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
 				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_empty.png",
			})
		end		
		cmdID = Spring.FindUnitCmdDesc(u, CMD.GROUPSELECT)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
 				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_empty.png",
			})
		end
		cmdID = Spring.FindUnitCmdDesc(u, CMD.GROUPADD)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
 				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_empty.png",
			})
		end
		cmdID = Spring.FindUnitCmdDesc(u, CMD.GROUPCLEAR)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
 				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_empty.png",
			})
		end
		cmdID = Spring.FindUnitCmdDesc(u, CMD.REPEAT)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_empty.png",
			})
		end		
		cmdID = Spring.FindUnitCmdDesc(u, CMD.TRAJECTORY)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
				name="",
				onlyTexture=true,
				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_empty.png",
			})
		end
		cmdID = Spring.FindUnitCmdDesc(u, 34220)
		if cmdID ~= nil then
			Spring.EditUnitCmdDesc(u, cmdID, {
				texture = "&.9x.9&bitmaps/icons/blank.tif&bitmaps/icons/euf_empty.png",
			})
		end		
	end
if ImmobileNoStandartButtons [Spring.GetUnitDefID(u)] then
		local cmdID
		cmdID = Spring.FindUnitCmdDesc(u, CMD.STOP)
		if cmdID ~= nil then
			Spring.RemoveUnitCmdDesc(u, cmdID)
		end	
		cmdID = Spring.FindUnitCmdDesc(u, CMD.REPEAT)
		if cmdID ~= nil then
			Spring.RemoveUnitCmdDesc(u, cmdID)
		end
		cmdID = Spring.FindUnitCmdDesc(u, CMD.WAIT)
		if cmdID ~= nil then
			Spring.RemoveUnitCmdDesc(u, cmdID)
		end
		cmdID = Spring.FindUnitCmdDesc(u, CMD.ATTACK)
		if cmdID ~= nil then
			Spring.RemoveUnitCmdDesc(u, cmdID)
		end			
	end
	if CanNotLand [Spring.GetUnitDefID(u)] then
		local cmdID
		cmdID = Spring.FindUnitCmdDesc(u, CMD.AUTOREPAIRLEVEL)
		if cmdID ~= nil then
			Spring.RemoveUnitCmdDesc(u, cmdID)
		end
	end
end

else
end