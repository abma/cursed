--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

function gadget:GetInfo()
   return {
      name      = "Attributes",
      desc      = "Handles UnitRulesParam reload times.",
      author    = "CarRepairer",
      date      = "2009-11-27",
      license   = "GNU GPL, v2 or later",
      layer     = -1,
      enabled   = true, 
   }
end


--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

--SYNCED
if gadgetHandler:IsSyncedCode() then

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
local spGetUnitDefID        	= Spring.GetUnitDefID
local spGetUnitStates  			= Spring.GetUnitStates

local spGetUnitRulesParam  		= Spring.GetUnitRulesParam
local spSetUnitRulesParam  		= Spring.SetUnitRulesParam

local spGetUnitHealth  			= Spring.GetUnitHealth
local spSetUnitHealth  			= Spring.SetUnitHealth

local spSetUnitMaxHealth  			= Spring.SetUnitMaxHealth

local spGetUnitCOBValue  		= Spring.GetUnitCOBValue
local spSetUnitCOBValue  		= Spring.SetUnitCOBValue

local spSetUnitWeaponState  = Spring.SetUnitWeaponState

local spGetUnitsInCylinder 	= Spring.GetUnitsInCylinder
local spGetUnitPosition 	= Spring.GetUnitPosition

local spSpawnCEG 				= Spring.SpawnCEG

local random	= math.random
local echo = Spring.Echo

local MAX_SPEED = 75

local COBRATIO = 1/30*65535

-- local heroaurahealthmultiplier = 1.5


--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

if not GG.attUnits then
	GG.attUnits = {}
end


function gadget:GameFrame(f)
	
	if f % 32 < .1 then
		for unitID, teamID in pairs(GG.attUnits) do
		
		
			local udid = spGetUnitDefID(unitID)
			if not udid then return end
				
			local ud = UnitDefs[udid]
			
			local burrowed = spGetUnitRulesParam(unitID,"burrowed")
			
			-- SLOW --
			if burrowed ~= 1 then
				local slowLevel = spGetUnitRulesParam(unitID,"slowState")
				if slowLevel then
					slowLevel = 1 - slowLevel
					
					local origSpeed = ud.speed * COBRATIO
					spSetUnitCOBValue(unitID, MAX_SPEED, origSpeed * slowLevel)
					
					for i,w in ipairs(ud.weapons) do
						local origReload = WeaponDefs[w.weaponDef].reload
						spSetUnitWeaponState(unitID, i-1, {reloadTime = origReload * (2 - slowLevel) })
					end	
				end
			end
			--end slow
			
			-- AURAS ------------------------------------------------------------------------------------------------
			--- Heroes ---
			--- Frenzy ---
			if (burrowed ~= 1 and spGetUnitRulesParam(unitID,"Frenzy Aura") == 1) then
				for i,w in ipairs(ud.weapons) do
					local origReload = WeaponDefs[w.weaponDef].reload
					
					local slowLevel = spGetUnitRulesParam(unitID,"slowState") or 0
					local curReload = origReload * (1 + slowLevel)
					spSetUnitWeaponState(unitID, i-1, {reloadTime = curReload / 2} )
				end
			end
			--END AURAS ------------------------------------------------------------------------------------------------
			if spGetUnitRulesParam(unitID,"Frenzy Aura") ~= 1 then
				local slowLevel = spGetUnitRulesParam(unitID,"slowState")
				if not slowLevel then
					for i,w in ipairs(ud.weapons) do
						local origReload = WeaponDefs[w.weaponDef].reload
						spSetUnitWeaponState(unitID, i-1, {reloadTime = origReload } )
					end
				end
			end

		end
	end
	
end

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--SYNCED
else
--UNSYNCED
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
--UNSYNCED
end
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
