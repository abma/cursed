--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

function gadget:GetInfo()
  return {
    name      = "Prevent Building Hax",
    desc      = "Stops enemy units from entering buildings.",
    author    = "Google Frog, aZaremoth",
    date      = "Jul 24, 2007",
    license   = "GNU GPL, v2 or later",
    layer     = 0,
    enabled   = true  --  loaded by default?
  }
end

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

if (gadgetHandler:IsSyncedCode()) then

--------------------------------------------------------------------------------
-- SYNCED
--------------------------------------------------------------------------------
  
-- Speedups
local spGetGroundHeight     = Spring.GetGroundHeight
local spGetUnitBuildFacing  = Spring.GetUnitBuildFacing
local spGetUnitAllyTeam  = Spring.GetUnitAllyTeam
local spGetUnitsInBox  = Spring.GetUnitsInBox
local spSetUnitPosition  = Spring.SetUnitPosition
local spGetUnitDefID = Spring.GetUnitDefID
local spGetUnitPosition = Spring.GetUnitPosition

local abs = math.abs
local min = math.min

-- local terraunitDefID = UnitDefNames["terraunit"].id
--------------------------------------------------------------------------------
--------------------------------------------------------------------------------

local lab = {}
_G.lab = lab

--------------------------------------------------------------------------------
--------------------------------------------------------------------------------
function checkbuildings()
  for Lid,Lv in pairs(lab) do  
    local units = spGetUnitsInBox(Lv.minx*1.05, Lv.miny*1.05, Lv.minz*1.05, Lv.maxx*1.05, Lv.maxy*1.05, Lv.maxz*1.05)
	
    for i,id in ipairs(units) do 
	  local ud = spGetUnitDefID(id)
	  local fly = UnitDefs[ud].canFly
	  local team = spGetUnitAllyTeam(id)
--	  Spring.Echo("unit: " .. team)
	  local labteam = spGetUnitAllyTeam(Lid)	  
--	  Spring.Echo("building: " .. team)
	  if (team ~= labteam) and not fly then
--		Spring.Echo(UnitDefs[ud].name)  
	    local ux, _, uz  = spGetUnitPosition(id)
		
		if (Lv.face == 1) then
		  local l = abs(ux-Lv.minx)
		  local r = abs(ux-Lv.maxx)
		  
		  if (l < r) then
		    spSetUnitPosition(id, Lv.minx, uz)
--			Spring.Echo("Unit moved!")
		  else
		    spSetUnitPosition(id, Lv.maxx, uz)
--			Spring.Echo("Unit moved!")
		  end
		else
		  local t = abs(uz-Lv.minz)
		  local b = abs(uz-Lv.maxz)
		  
		  if (t < b) then
		    spSetUnitPosition(id, ux, Lv.minz)
--			Spring.Echo("Unit moved!")
		  else
		    spSetUnitPosition(id, ux, Lv.maxz) 
--			Spring.Echo("Unit moved!")
		  end
		end
	  end
	end
  end
end

function gadget:UnitCreated(unitID, unitDefID)
  

  local ux, uy, uz  = spGetUnitPosition(unitID)
  local facing = spGetUnitBuildFacing(unitID)
  
  local ud = UnitDefs[unitDefID]
  local name = ud.name
--  Spring.Echo(ud.name .. "'s speed: " .. ud.speed)
  if (ud.speed == 0) then
	local ux, uy, uz  = spGetUnitPosition(unitID)
	local face = spGetUnitBuildFacing(unitID)
	local xsize = (ud.xsize)*4
	local zsize = (ud.ysize or ud.zsize)*4
	local team = spGetUnitAllyTeam(unitID)

	if ((face == 0) or (face == 2))  then
		if xsize%16 == 0 then
			ux = math.floor((ux+8)/16)*16
		else
			ux = math.floor(ux/16)*16+8
		end

		if zsize%16 == 0 then
			uz = math.floor((uz+8)/16)*16
		else
			uz = math.floor(uz/16)*16+8
		end
	
		lab[unitID] = { team = team, face = 0,
			minx = ux-xsize+0.1, minz = uz-zsize+0.1, maxx = ux+xsize-0.1, maxz = uz+zsize-0.1}
	else
		if xsize%16 == 0 then
			uz = math.floor((uz+8)/16)*16
		else
			uz = math.floor(uz/16)*16+8
		end

		if zsize%16 == 0 then
			ux = math.floor((ux+8)/16)*16
		else
			ux = math.floor(ux/16)*16+8
		end
		
		lab[unitID] = { team = team, face = 1,
			minx = ux-zsize+0.1, minz = uz-xsize+0.1, maxx = ux+zsize-0.1, maxz = uz+xsize-0.1}
	end
	lab[unitID].miny = spGetGroundHeight(ux,uz)
	lab[unitID].maxy = lab[unitID].miny+100
	
  end
  
end

function gadget:UnitDestroyed(unitID, unitDefID)
  if (lab[unitID]) then
    lab[unitID] = nil
  end
end

function gadget:UnitGiven(unitID, unitDefID)
  if (lab[unitID]) then
    lab[unitID].team = spGetUnitAllyTeam(unitID)
  end
end


function gadget:GameFrame(n)
   checkbuildings()
end

else
--------------------------------------------------------------------------------
-- UNSYNCED
--------------------------------------------------------------------------------
local debugMode = false

local lab = SYNCED.lab

function gadget:DrawWorld()
	if not debugMode then return end
	gl.Color(1,0,0,0.75)
	for i,v in spairs(lab) do
		gl.DrawGroundQuad(v.minx, v.minz, v.maxx, v.maxz )
	end
	gl.Color(1,1,1,1)
end


end